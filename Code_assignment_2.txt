(base) C:\Users\mayra\geo_env>conda activate geo_env

(geo_env) C:\Users\mayra\geo_env>cd C:\Users\mayra\geo_env
# Changes the directory to 'geo_env' folder

(geo_env) C:\Users\mayra\geo_env>code .
# Opens Visual Studio Code in the current directory

(geo_env) C:\Users\mayra\geo_env>python assignment_2.py
--Return--
> c:\users\mayra\geo_env\assignment_2.py(7)<module>()->None

# Python Debugger (pdb) Commands:
# Displays the contents of the dataset 'dset'
-> pdb.set_trace()
(Pdb) print(dset)
<xarray.Dataset> Size: 162MB
Dimensions:    (bnds: 2, lat: 180, lon: 288, time: 780)
Coordinates:
  * bnds       (bnds) float64 16B 1.0 2.0
    height     float64 8B ...
  * lat        (lat) float64 1kB -89.5 -88.5 -87.5 -86.5 ... 86.5 87.5 88.5 89.5
  * lon        (lon) float64 2kB 0.625 1.875 3.125 4.375 ... 356.9 358.1 359.4
  * time       (time) object 6kB 1950-01-16 12:00:00 ... 2014-12-16 12:00:00
Data variables:
    lat_bnds   (lat, bnds) float64 3kB ...
    lon_bnds   (lon, bnds) float64 5kB ...
    tas        (time, lat, lon) float32 162MB ...
    time_bnds  (time, bnds) object 12kB ...
Attributes: (12/46)
    external_variables:     areacella
    history:                File was processed by fremetar (GFDL analog of CM...
    table_id:               Amon
    activity_id:            CMIP
    branch_method:          standard
    branch_time_in_child:   0.0
    ...                     ...
    title:                  NOAA GFDL GFDL-ESM4 model output prepared for CMI...
    tracking_id:            hdl:21.14100/a54fe2f4-0a68-4420-8702-36750bde9b05
    variable_id:            tas
    variant_info:           N/A
    references:             see further_info_url attribute
    variant_label:          r1i1p1f1

# Lists all variable names (keys) in the dataset 'dset'
(Pdb) print(dset.keys())
KeysView(<xarray.Dataset> Size: 162MB
Dimensions:    (bnds: 2, lat: 180, lon: 288, time: 780)
Coordinates:
  * bnds       (bnds) float64 16B 1.0 2.0
    height     float64 8B ...
  * lat        (lat) float64 1kB -89.5 -88.5 -87.5 -86.5 ... 86.5 87.5 88.5 89.5
  * lon        (lon) float64 2kB 0.625 1.875 3.125 4.375 ... 356.9 358.1 359.4
  * time       (time) object 6kB 1950-01-16 12:00:00 ... 2014-12-16 12:00:00
Data variables:
    lat_bnds   (lat, bnds) float64 3kB ...
    lon_bnds   (lon, bnds) float64 5kB ...
    tas        (time, lat, lon) float32 162MB ...
    time_bnds  (time, bnds) object 12kB ...
Attributes: (12/46)
    external_variables:     areacella
    history:                File was processed by fremetar (GFDL analog of CM...
    table_id:               Amon
    activity_id:            CMIP
    branch_method:          standard
    branch_time_in_child:   0.0
    ...                     ...
    title:                  NOAA GFDL GFDL-ESM4 model output prepared for CMI...
    tracking_id:            hdl:21.14100/a54fe2f4-0a68-4420-8702-36750bde9b05
    variable_id:            tas
    variant_info:           N/A
    references:             see further_info_url attribute
    variant_label:          r1i1p1f1)

# Extracts the 'tas' (temperature) variable from the dataset
(Pdb) tas = dset['tas']

# Prints the dimensions of the 'tas' data 
(Pdb) print(tas.shape)
(780, 180, 288)

# Shows the data type of 'tas'
(Pdb) print(tas.dtype)
float32

# Displays the time coordinate information in the dataset
(Pdb) print(dset['time'])
<xarray.DataArray 'time' (time: 780)> Size: 6kB
array([cftime.DatetimeNoLeap(1950, 1, 16, 12, 0, 0, 0, has_year_zero=True),
       cftime.DatetimeNoLeap(1950, 2, 15, 0, 0, 0, 0, has_year_zero=True),
       cftime.DatetimeNoLeap(1950, 3, 16, 12, 0, 0, 0, has_year_zero=True),
       ...,
       cftime.DatetimeNoLeap(2014, 10, 16, 12, 0, 0, 0, has_year_zero=True),
       cftime.DatetimeNoLeap(2014, 11, 16, 0, 0, 0, 0, has_year_zero=True),
       cftime.DatetimeNoLeap(2014, 12, 16, 12, 0, 0, 0, has_year_zero=True)],
      shape=(780,), dtype=object)
Coordinates:
    height   float64 8B ...
  * time     (time) object 6kB 1950-01-16 12:00:00 ... 2014-12-16 12:00:00
Attributes:
    long_name:      time
    axis:           T
    calendar_type:  noleap
    bounds:         time_bnds
    standard_name:  time
    description:    Temporal mean

# Prints the units of the 'tas' variable
(Pdb) print(dset['tas'].units)
K

# Lists the coordinates associated with 'tas'
(Pdb) print(dset['tas'].coords)
Coordinates:
    height   float64 8B ...
  * lat      (lat) float64 1kB -89.5 -88.5 -87.5 -86.5 ... 86.5 87.5 88.5 89.5
  * lon      (lon) float64 2kB 0.625 1.875 3.125 4.375 ... 356.9 358.1 359.4
  * time     (time) object 6kB 1950-01-16 12:00:00 ... 2014-12-16 12:00:00

# Displays the metadata attributes of 'tas'
(Pdb) print(dset['tas'].attrs)
{'long_name': 'Near-Surface Air Temperature', 'units': 'K', 'cell_methods': 'area: time: mean', 'cell_measures': 'area: areacella', 'standard_name': 'air_temperature', 'interp_method': 'conserve_order2', 'original_name': 'tas'}

# Exits the Python debugger
(Pdb) q
Traceback (most recent call last):
  File "C:\Users\mayra\geo_env\assignment_2.py", line 7, in <module>
    pdb.set_trace()
  File "C:\anaconda\envs\geo_env\Lib\bdb.py", line 94, in trace_dispatch
    return self.dispatch_return(frame, arg)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\anaconda\envs\geo_env\Lib\bdb.py", line 156, in dispatch_return
    if self.quitting: raise BdbQuit
                      ^^^^^^^^^^^^^
bdb.BdbQuit

#Part three

(geo_env) C:\Users\mayra\geo_env>python assignment_2.py
--Return--
> c:\users\mayra\geo_env\assignment_2.py(7)<module>()->None
-> pdb.set_trace()

# Loading historical climate data
(Pdb) ruta_hist = r'C:/Users/mayra/geo_env/Course_Data/Climate_Model_Data/tas_Amon_GFDL-ESM4_historical_r1i1p1f1_gr1_195001-201412.nc'

# Opens the NetCDF file as an xarray dataset
(Pdb) dset_hist = xr.open_dataset(ruta_hist)

# Calculates the mean surface air temperature from 1950 to 1980
(Pdb) mean_1950_1980 = dset_hist['tas'].sel(time=slice('1950-01-01', '1980-12-31')).mean(dim='time')
(Pdb) print("Temperatura media 1950-1980 calculada")
Temperatura media 1950-1980 calculada
(Pdb) print(mean_1950_1980)
<xarray.DataArray 'tas' (lat: 180, lon: 288)> Size: 207kB
array([[223.0667 , 223.03702, 223.00746, ..., 223.15549, 223.1258 ,
        223.0963 ],
       [224.14168, 224.07628, 224.01054, ..., 224.3374 , 224.27231,
        224.20699],
       [225.37149, 225.26808, 225.16475, ..., 225.68149, 225.57819,
        225.47493],
       ...,
       [255.29723, 255.32037, 255.3434 , ..., 255.2273 , 255.25076,
        255.27405],
       [255.07666, 255.08824, 255.09978, ..., 255.0415 , 255.05336,
        255.06496],
       [254.87434, 254.8764 , 254.87859, ..., 254.86792, 254.8701 ,
        254.87233]], shape=(180, 288), dtype=float32)
Coordinates:
    height   float64 8B ...
  * lat      (lat) float64 1kB -89.5 -88.5 -87.5 -86.5 ... 86.5 87.5 88.5 89.5
  * lon      (lon) float64 2kB 0.625 1.875 3.125 4.375 ... 356.9 358.1 359.4

# Loading future climate scenario data (SSP585)
# Sets the path to the future climate scenario data file
(Pdb) ruta_ssp585 = r'C:/Users/mayra/geo_env/Course_Data/Climate_Model_Data/tas_Amon_GFDL-ESM4_ssp585_r1i1p1f1_gr1_201501-210012.nc'

# Opens the SSP585 scenario data as an xarray dataset
(Pdb) dset_ssp585 = xr.open_dataset(ruta_ssp585)

# Calculates the mean surface air temperature from 2071 to 2100 under SSP585
(Pdb) mean_2071_2100_ssp585 = dset_ssp585['tas'].sel(time=slice('2071-01-01', '2100-12-31')).mean(dim='time')
(Pdb) print("Temperatura media 2071-2100 calculada")
Temperatura media 2071-2100 calculada
(Pdb) print(mean_2071_2100_ssp585)
<xarray.DataArray 'tas' (lat: 180, lon: 288)> Size: 207kB
array([[228.45221, 228.42485, 228.39732, ..., 228.53491, 228.50742,
        228.48001],
       [229.40703, 229.34299, 229.27924, ..., 229.59811, 229.53442,
        229.47087],
       [230.57056, 230.4651 , 230.35962, ..., 230.88707, 230.7816 ,
        230.67621],
       ...,
       [264.10208, 264.12045, 264.13864, ..., 264.0467 , 264.0653 ,
        264.0837 ],
       [263.91147, 263.92004, 263.9286 , ..., 263.88544, 263.89435,
        263.90292],
       [263.7449 , 263.7459 , 263.7469 , ..., 263.74164, 263.74258,
        263.74365]], shape=(180, 288), dtype=float32)
Coordinates:
    height   float64 8B ...
  * lat      (lat) float64 1kB -89.5 -88.5 -87.5 -86.5 ... 86.5 87.5 88.5 89.5
  * lon      (lon) float64 2kB 0.625 1.875 3.125 4.375 ... 356.9 358.1 359.4

# Calculating temperature change
# Computes the temperature change between the future (2071-2100) and historical (1950-1980) periods
(Pdb) temp_change_ssp585 = mean_2071_2100_ssp585 - mean_1950_1980
(Pdb)  print("Cambio de temperatura calculado")
Cambio de temperatura calculado
(Pdb)  print(temp_change_ssp585)
<xarray.DataArray 'tas' (lat: 180, lon: 288)> Size: 207kB
array([[5.3855133, 5.3878326, 5.389862 , ..., 5.379425 , 5.3816223,
        5.383713 ],
       [5.2653503, 5.2667084, 5.268692 , ..., 5.2607117, 5.2621155,
        5.2638855],
       [5.199066 , 5.1970215, 5.19487  , ..., 5.2055817, 5.203415 ,
        5.2012787],
       ...,
       [8.804855 , 8.800079 , 8.795242 , ..., 8.819397 , 8.814545 ,
        8.809662 ],
       [8.834808 , 8.831802 , 8.828812 , ..., 8.843933 , 8.840988 ,
        8.837967 ],
       [8.87056  , 8.869507 , 8.868301 , ..., 8.873718 , 8.872482 ,
        8.871323 ]], shape=(180, 288), dtype=float32)
Coordinates:
    height   float64 8B 2.0
  * lat      (lat) float64 1kB -89.5 -88.5 -87.5 -86.5 ... 86.5 87.5 88.5 89.5
  * lon      (lon) float64 2kB 0.625 1.875 3.125 4.375 ... 356.9 358.1 359.4

# Visualizing the temperature change
# Creates a new figure for plotting with specified dimensions
(Pdb) plt.figure(figsize=(10, 6))
<Figure size 1000x600 with 0 Axes>

# Plots the temperature change as an image using a 'coolwarm' color map
(Pdb) plt.imshow(temp_change_ssp585, cmap='coolwarm', origin='lower')
<matplotlib.image.AxesImage object at 0x000002083D433EF0>

# Adds a colorbar to the plot with a label indicating temperature change in Celsius
(Pdb) plt.colorbar(label='Temperature Change (°C)')
<matplotlib.colorbar.Colorbar object at 0x000002083D46DFD0>

# Sets the title of the plot
(Pdb) plt.title('Temperature Change 2071-2100 vs 1950-1980 (SSP585)')
Text(0.5, 1.0, 'Temperature Change 2071-2100 vs 1950-1980 (SSP585)')

# Labels the x-axis as 'Longitude'
(Pdb) plt.xlabel('Longitude')
Text(0.5, 0, 'Longitude')

# Labels the y-axis as 'Latitude'
(Pdb) plt.ylabel('Latitude')
Text(0, 0.5, 'Latitude')

# Saves the plot as a PNG file with a resolution of 300 DPI
(Pdb) plt.savefig('temp_change_ssp585.png', dpi=300)

# Displays the plot in an interactive window
(Pdb) plt.show()
